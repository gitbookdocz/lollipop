name: Build and Deploy GitBook

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js 10
        uses: actions/setup-node@v3
        with:
          node-version: '10'
          
      - name: Install GitBook
        run: |
          npm install -g gitbook-cli
          gitbook fetch 3.2.2
          
      - name: Validate and create missing files
        run: |
          # Create SUMMARY.md if it doesn't exist
          if [ ! -f "SUMMARY.md" ]; then
            echo "# Summary" > SUMMARY.md
            echo "" >> SUMMARY.md
            for file in *.md; do
              if [ "$file" != "README.md" ] && [ "$file" != "SUMMARY.md" ]; then
                title=$(echo "$file" | sed 's/\.md$//' | sed 's/-/ /g' | sed 's/\b\w/\U&/g')
                echo "* [$title]($file)" >> SUMMARY.md
              fi
            done
          fi
          
      - name: Auto-replace ANY icon patterns automatically
        run: |
          # Create a simple script to replace ANY icon: text with Font Awesome
          cat << 'EOF' > replace_icons.py
          import os
          import re
          import glob
          
          # Pattern to match: icon: any-text-here or icons: any-text-here
          pattern = r'icons?:?\s*([a-zA-Z0-9-]+)'
          
          def replace_icons_in_file(file_path):
              with open(file_path, 'r', encoding='utf-8') as file:
                  content = file.read()
              
              # Find all icon patterns
              matches = re.finditer(pattern, content, re.IGNORECASE)
              changes = []
              
              for match in matches:
                  icon_text = match.group(1).lower().replace('-', ' ')
                  # Convert to Font Awesome class format (fas fa-icon-name)
                  fa_class = f"fas fa-{match.group(1).lower().replace(' ', '-')}"
                  replacement = f'<i class="{fa_class}"></i>'
                  
                  # Replace only if not already replaced
                  if match.group(0) not in content.replace(match.group(0), replacement):
                      content = content.replace(match.group(0), replacement)
                      changes.append(f"Replaced: {match.group(0)} â†’ {fa_class}")
              
              if changes:
                  with open(file_path, 'w', encoding='utf-8') as file:
                      file.write(content)
                  print(f"Updated {file_path}:")
                  for change in changes:
                      print(f"  {change}")
          
          # Process all markdown files
          for md_file in glob.glob('**/*.md', recursive=True):
              replace_icons_in_file(md_file)
          EOF
          
          # Run the icon replacement
          python3 replace_icons.py
          
      - name: Create book.json
        run: |
          cat << 'EOF' > book.json
          {
            "title": "Your Documentation",
            "plugins": ["-search", "fontsettings", "theme-default"],
            "pluginsConfig": {
              "fontsettings": {
                "theme": "white"
              }
            }
          }
          EOF
          
      - name: Clean up markdown files
        run: |
          # Remove any problematic template syntax
          find . -name "*.md" -exec sed -i 's/{%[^%]*%}//g' {} \;
          find . -name "*.md" -exec sed -i 's/{{[^}]*}}//g' {} \;
          
      - name: Add Font Awesome styling
        run: |
          mkdir -p styles
          cat << 'EOF' > styles/website.css
          @import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css');
          
          /* Style for auto-generated icons */
          .markdown-section i[class^="fas fa-"] {
            margin-right: 8px;
            color: #007acc;
            width: 16px;
            text-align: center;
          }
          EOF
          
      - name: Build GitBook
        run: |
          gitbook install
          gitbook build
          
      - name: Ensure Font Awesome is included
        run: |
          # Add Font Awesome to all HTML files
          find ./_book -name "*.html" -exec sed -i 's|</head>|<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"></head>|' {} \;
          
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_book
